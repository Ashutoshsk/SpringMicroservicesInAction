spring.application.name=licensing-service
spring.profiles.active=dev
spring.config.import=optional:configserver:http://localhost:8071/

spring.main.allow-bean-definition-overriding=true

logging.level.com.netflix=WARN
logging.level.org.springframework.web=WARN
logging.level.com.spma=DEBUG

server.port= 8081

#Default Below

springdoc.api-docs.enabled=true
springdoc.api-docs.path=/v3/api-docs

springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

resilience4j.circuitbreaker.instances.licenseService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInClosedState=5
resilience4j.circuitbreaker.instances.licenseService.ringBufferSizeInHalfOpenState=3
resilience4j.circuitbreaker.instances.licenseService.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.licenseService.failureRateThreshold=50
resilience4j.circuitbreaker.instances.licenseService.recordExceptions=org.springframework.web.client.HttpServerErrorException,\
                                                                      java.io.IOException,java.util.concurrent.TimeoutException,\
                                                                      org.springframework.web.client.ResourceAccessException

resilience4j.circuitbreaker.instances.organizationService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.organizationService.ringBufferSizeInClosedState=6
resilience4j.circuitbreaker.instances.organizationService.ringBufferSizeInHalfOpenState=4
resilience4j.circuitbreaker.instances.organizationService.waitDurationInOpenState=20s
resilience4j.circuitbreaker.instances.organizationService.failureRateThreshold=60

resilience4j.bulkhead.instances.bulkheadLicenseService.maxWaitDuration=10ms
resilience4j.bulkhead.instances.bulkheadLicenseService.maxConcurrentCalls=20

resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.maxThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.coreThreadPoolSize=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.queueCapacity=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicenseService.keepAliveDuration=20ms

resilience4j.retry.instances.retryLicenseService.maxRetryAttempts=5
resilience4j.retry.instances.retryLicenseService.waitDuration=10000
resilience4j.retry.instances.retryLicenseService.retry-exceptions=java.util.concurrent.TimeoutException


#here is an example of how to calculate the number of threads needed for a thread pool:
#(requests per second at peak when the service is healthy *
# 99th percentile latency in seconds) + small amount of extra threads for overhead

resilience4j.ratelimiter.instances.licenseService.limitForPeriod=5
resilience4j.ratelimiter.instances.licenseService.limitRefreshPeriod=5000
resilience4j.ratelimiter.instances.licenseService.timeoutDuration=1000ms

