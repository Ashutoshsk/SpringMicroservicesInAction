server.port= 8082

spring.application.name=organization-service

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

spring.cloud.loadbalancer.ribbon.enabled = false

eureka.instance.preferIpAddress = true
eureka.client.registerWithEureka = true
eureka.client.fetchRegistry = true
eureka.client.service-url.defaultZone=http://localhost:8070/eureka

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/spmia-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt.auth.converter.resource-id=ostock
jwt.auth.converter.principle-attribute=preferred_username

#spring.cloud.stream.bindings.output.destination=orgChangeTopic
#spring.cloud.stream.bindings.output.content-type=application/json
#spring.cloud.stream.kafka.binder.zkNodes=localhost
#spring.cloud.stream.kafka.binder.brokers=localhost

management.tracing.enabled=true
management.tracing.sampling.probability=1.0
zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-},ashutosh]
logging.level.org.springframework.web = DEBUG