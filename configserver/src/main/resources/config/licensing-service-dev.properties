example.property= I AM DEV

server.port=0


spring.application.name=licensing-service

spring.datasource.url = jdbc:postgresql://localhost:5432/ostock_dev
spring.datasource.username = postgres
spring.datasource.password = postgres
spring.jpa.show-sql = true
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.database.driverClassName= org.postgresql.Driver
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
spring.datasource.socketTimeout=60000



management.endpoints.web.exposure.include=*
management.endpoints.enabled-by-default=true

spring.cloud.loadbalancer.ribbon.enabled = false
#spring.cloud.loadbalancer.enabled=true



eureka.instance.hostname=localhost
eureka.client.service-url.defaultZone=http://localhost:8761/eureka


spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/spmia-realm
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs

jwt.auth.converter.resource-id=ostock
jwt.auth.converter.principle-attribute=preferred_username

#spring.data.redis.database=0
#spring.data.redis.host=localhost
#spring.data.redis.port=6379
#spring.data.redis.timeout=60000
redis.server = localhost
redis.port = 6379
management.tracing.enabled=true
management.tracing.sampling.probability=1.0
zipkin.tracing.endpoint=http://localhost:9411/api/v2/spans

logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.level.com.netflix=WARN
logging.level.org.springframework.web=DEBUG
logging.level.com.spma=DEBUG

spring.cloud.function.definition=loggerSink
spring.cloud.stream.bindings.loggerSink-in-0.destination=orgChangeTopic
spring.cloud.stream.bindings.loggerSink-in-0.group=licensingGroup
spring.kafka.bootstrap-servers=localhost:9092

spring.main.allow-circular-references: true


